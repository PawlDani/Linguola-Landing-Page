// src/components/Hero/Hero.module.scss
@use "sass:math";
@import "../../styles/variables.scss"; // Import variables

.heroWrapper {
  display: flex;
  justify-content: center;

  .hero {
    position: relative;
    display: flex;
    background-image: url("../../assets/heroBackground.png");
    background-size: cover;
    background-position: top;
    background-repeat: no-repeat;
    margin-bottom: 100px;
    height: 80vh;
    width: 100%;
    margin-top: 80px;

    @media (max-width: 950px) {
      margin-bottom: 80px;
    }

    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 50vw; // 60% of the viewport width
      height: 100%;
      background-color: rgba(
        233,
        222,
        213,
        0.845
      ); // Peach color with transparency
      clip-path: polygon(
        0 0,
        80% 0,
        100% 100%,
        0% 100%
      ); // Create a diagonal edge

      @media (max-width: 1400px) {
        width: 50vw; // Adjust as needed
      }

      @media (max-width: 450px) {
        width: 60vw; // Adjust as needed
      }
    }

    .heroContainer {
      display: flex;
      flex-direction: column;
      justify-content: center; // Vertically center the content
      align-items: flex-start; // Align content to the left
      padding-left: 20px; // Add some padding on the left if needed
    }

    .heroContent {
      display: flex;
      flex-direction: column;
      animation: slideInFromTop 0.8s ease-out forwards;
      max-width: 410px;
      gap: 20px;
      font-family: $mainFontFamily;

      h1 {
        text-transform: uppercase;
        margin-bottom: 20px; // Adjust based on your design needs
        font-size: $h1FontSize;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        color: $alternativeTextColor;
      }

      p {
        color: $mainColor;
        font-size: $h2FontSize;
        text-transform: uppercase;
      }

      @media (max-width: 1200px) {
        max-width: 300px;
        h1 {
          font-size: math.div($h1FontSize, 1.2); // Reduce the font size by 20%
        }

        p {
          font-size: math.div($h2FontSize, 1.2); // Reduce the font size by 20%
        }
      }

      @media (max-width: 1100px) {
        max-width: 280px;
      }

      @media (max-width: 900px) {
        max-width: 230px;
        h1 {
          font-size: math.div($h1FontSize, 1.5); // Reduce the font size by 33%
        }

        p {
          font-size: math.div($h2FontSize, 1.5); // Reduce the font size by 33%
        }
      }

      @media (max-width: 768px) {
        max-width: 210px;

        button {
          padding: 10px 10px;
          font-size: math.div($h2FontSize, 1.7); // Reduce the font size by 33%
        }

        h1 {
          font-size: math.div($h1FontSize, 1.6); // Reduce the font size by 20%
        }

        p {
          font-size: math.div($h2FontSize, 1.6); // Reduce the font size by 20%
        }
      }

      @media (max-width: 520px) {
        max-width: 180px;

        button {
          padding: 10px 5px;
          font-size: math.div($h2FontSize, 2.2); // Reduce the font size by 33%
        }

        h1 {
          font-size: math.div($h1FontSize, 1.8); // Reduce the font size by 20%
        }

        p {
          font-size: math.div($h2FontSize, 1.8); // Reduce the font size by 20%
        }
      }
    }
  }

  @keyframes slideInFromTop {
    from {
      transform: translateY(-100%);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  @keyframes slideInFromRight {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @media (max-width: 1400px) {
    .hero {
      height: auto;
      min-height: 70vh;
    }
  }
}

@media (max-width: 768px) {
  .heroWrapper .hero {
    height: 50vh; // Set the height to 50% of the viewport height
    min-height: auto; // You might want to adjust or remove the min-height if set previously
  }
}

@media (max-width: 650px) {
  .heroWrapper .hero {
    height: 40vh; // Set the height to 40% of the viewport height
  }
}

@media (max-width: 520px) {
  .heroWrapper .hero {
    height: 35vh; // Set the height to 40% of the viewport height
  }
}
